[data]
; See the documentation at
; http://pycbc.org/pycbc/latest/html/inference.html#simulated-bbh-example
; for details on the following settings:
instruments = H1 L1 V1
trigger-time = 1187008882.4
analysis-start-time = -190
analysis-end-time = 10
; strain settings
sample-rate = 4096
fake-strain = H1:aLIGODesignSensitivityP1200087 L1:aLIGODesignSensitivityP1200087 V1:AdVDesignSensitivityP1200087
fake-strain-seed = H1:0 L1:1 V1:2
; psd settings
psd-model = H1:aLIGODesignSensitivityP1200087 L1:aLIGODesignSensitivityP1200087 V1:AdVDesignSensitivityP1200087
; requires a channel name so we make one up
channel-name = H1:STRAIN L1:STRAIN V1:STRAIN
; Providing an injection file will cause injection
; to be added to the data
injection-file = injection_SLy_1p41p4.hdf
; We'll use a high-pass filter so as not to get numerical errors from the large
; amplitude low frequency noise. Here we use 15 Hz, which is safely below the
; low frequency cutoff of our likelihood integral (20 Hz)
strain-high-pass = 15
; The pad-data argument is for the high-pass filter: 8s are added to the
; beginning/end of the analysis/psd times when the data is loaded. After the
; high pass filter is applied, the additional time is discarded. This pad is
; *in addition to* the time added to the analysis start/end time for the PSD
; inverse length. Since it is discarded before the data is transformed for the
; likelihood integral, it has little affect on the run time.
pad-data = 8
